name: Release
on:
  push:
    tags:
      - "v*"

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install getopt for Windows
        shell: powershell
        run: |
          choco install -y libgetopt

      - name: Check getopt Installation and Find Include Path
        shell: powershell
        run: |
          choco list -lo libgetopt
          $getoptPath = (choco list -lo libgetopt | Select-String -Pattern "location:").ToString().Split(":")[1].Trim()
          Write-Host "getopt Installation Path: $getoptPath"
          Write-Host "::set-output name=getopt_path::$getoptPath"
        id: find_getopt_path

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INCLUDE_PATH="$env:GITHUB_WORKSPACE/$(${{ steps.find_getopt_path.outputs.getopt_path }})/include"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Package
        shell: powershell
        run: |
          cd ${{github.workspace}}/build/${{env.BUILD_TYPE}}
          $TAG_NAME = "${env:GITHUB_REF}".Replace("refs/tags/", "")
          $AssetPath = Join-Path -Path $(pwd) -ChildPath "$TAG_NAME.zip"
          Compress-Archive -Path * -DestinationPath $AssetPath -Force
          Write-Host "ASSET_PATH=$AssetPath"
          Write-Host "ASSET_NAME=$TAG_NAME.zip"
          Write-Host "::set-env name=ASSET_PATH::$AssetPath"
          Write-Host "::set-env name=ASSET_NAME::$TAG_NAME.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/zip
